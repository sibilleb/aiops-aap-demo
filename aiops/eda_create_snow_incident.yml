---
- name: AIOps EDA Create ServiceNow Incident
  hosts: localhost
  gather_facts: true

  pre_tasks:
    - name: Ensure servicenow.itsm collection is installed
      ansible.builtin.command:
        cmd: ansible-galaxy collection install servicenow.itsm --force
      changed_when: false
      failed_when: false

  vars:
    # These variables are passed from the previous workflow job via set_stats
    ai_short_description: "{{ ai_short_description | default('') }}"
    ai_full_analysis: "{{ ai_full_analysis | default('') }}"
    alert_details_table: "{{ alert_details_table | default('') }}"
    incident_severity: "{{ incident_severity | default('warning') }}"
    snow_priority: "{{ snow_priority | default('2') }}"
    snow_urgency: "{{ snow_urgency | default('2') }}"
    snow_impact: "{{ snow_impact | default('2') }}"
    dependency_tag: "{{ dependency_tag | default('') }}"
    alert_count: "{{ alert_count | default(0) }}"
    affected_hosts: "{{ affected_hosts | default('') }}"
    llm_tokens_used: "{{ llm_tokens_used | default(0) }}"

    # ServiceNow connection details from credentials
    snow_instance_url: "{{ lookup('env', 'SNOW_INSTANCE') }}"
    snow_username: "{{ lookup('env', 'SNOW_USERNAME') }}"
    snow_password: "{{ lookup('env', 'SNOW_PASSWORD') }}"

    # Alert Integration caller ID
    alert_integration_caller: "ca93c3c183f0325021ee47447daad34f"

  tasks:
    - name: Display incident creation information
      ansible.builtin.debug:
        msg:
          - "========================================="
          - "Creating ServiceNow Incident"
          - "========================================="
          - "Short Description: {{ ai_short_description }}"
          - "Severity: {{ incident_severity }}"
          - "Alert Count: {{ alert_count }}"
          - "Dependency Tag: {{ dependency_tag }}"
          - "========================================="

    - name: Validate required data from previous workflow job
      ansible.builtin.assert:
        that:
          - ai_short_description | length > 0
          - ai_full_analysis | length > 0
          - alert_details_table | length > 0
          - dependency_tag | length > 0
        fail_msg: "Missing required data from previous workflow job. Ensure alert correlation job completed successfully."
        success_msg: "All required data received from workflow"

    # ========================================================================
    # STEP 1: Build comprehensive incident description
    # ========================================================================
    - name: Build incident description with AI analysis and alert details
      ansible.builtin.set_fact:
        incident_description: |-
          ========================================
          AI-GENERATED ANALYSIS
          ========================================

          {{ ai_full_analysis }}

          ========================================
          ORIGINAL ALERT DETAILS
          ========================================

          {{ alert_details_table }}

          ========================================
          METADATA
          ========================================
          Created by: Event-Driven Ansible
          Correlation Engine: AIOps EDA
          AI Model: {{ lookup('env', 'LLM_MODEL') }}
          Analysis Timestamp: {{ ansible_date_time.iso8601 }}
          LLM Tokens Used: {{ llm_tokens_used }}
          ========================================

    # ========================================================================
    # STEP 2: Create ServiceNow incident using REST API
    # ========================================================================
    - name: Create incident in ServiceNow using REST API
      ansible.builtin.uri:
        url: "{{ snow_instance_url }}/api/now/table/incident"
        method: POST
        user: "{{ snow_username }}"
        password: "{{ snow_password }}"
        force_basic_auth: yes
        validate_certs: no
        headers:
          Content-Type: "application/json"
          Accept: "application/json"
        body_format: json
        body:
          short_description: "{{ ai_short_description }}"
          description: "{{ incident_description }}"
          caller_id: "{{ alert_integration_caller }}"
          urgency: "{{ '1' if snow_urgency == '1' else '2' }}"
          impact: "{{ '1' if snow_impact == '1' else '2' }}"
          priority: "{{ '1' if snow_priority == '1' else '2' }}"
          u_ai_enriched: true
          comments: "Incident created from {{ alert_count }} correlated OpenShift alerts with dependency tag: {{ dependency_tag }}"
        status_code: 201
      register: snow_incident
      retries: 3
      delay: 5
      until: snow_incident.status == 201

    - name: Display incident creation result
      ansible.builtin.debug:
        msg:
          - "========================================="
          - "SERVICENOW INCIDENT CREATED SUCCESSFULLY"
          - "========================================="
          - "Incident Number: {{ snow_incident.json.result.number }}"
          - "Incident Sys ID: {{ snow_incident.json.result.sys_id }}"
          - "State: {{ snow_incident.json.result.state }}"
          - "Priority: {{ snow_incident.json.result.priority }}"
          - "Urgency: {{ snow_incident.json.result.urgency }}"
          - "Impact: {{ snow_incident.json.result.impact }}"
          - "Created On: {{ snow_incident.json.result.sys_created_on }}"
          - "========================================="
          - ""
          - "View incident in ServiceNow:"
          - "{{ snow_instance_url }}/nav_to.do?uri=incident.do?sys_id={{ snow_incident.json.result.sys_id }}"
          - ""
          - "Incident Summary:"
          - "• Correlated {{ alert_count }} alerts"
          - "• Affected hosts: {{ affected_hosts }}"
          - "• Dependency tag: {{ dependency_tag }}"
          - "• AI analysis: {{ llm_tokens_used }} tokens"
          - "========================================="

    # ========================================================================
    # STEP 3: Export incident details for potential downstream workflows
    # ========================================================================
    - name: Export incident details via set_stats
      ansible.builtin.set_stats:
        data:
          snow_incident_number: "{{ snow_incident.json.result.number }}"
          snow_incident_sys_id: "{{ snow_incident.json.result.sys_id }}"
          snow_incident_url: "{{ snow_instance_url }}/nav_to.do?uri=incident.do?sys_id={{ snow_incident.json.result.sys_id }}"
          snow_incident_state: "{{ snow_incident.json.result.state }}"
          incident_created_at: "{{ ansible_date_time.iso8601 }}"
        per_host: false

    - name: Final summary
      ansible.builtin.debug:
        msg:
          - "✓ Incident {{ snow_incident.json.result.number }} created successfully"
          - "✓ {{ alert_count }} correlated alerts processed"
          - "✓ AI-enhanced descriptions applied"
          - "✓ Original alert data preserved in incident description"
          - ""
          - "Workflow complete!"
