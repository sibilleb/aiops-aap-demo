---
- name: AIOps ServiceNow Incident Enrichment
  hosts: localhost
  gather_facts: false

  vars:
    incident_sys_id: "{{ incident_sys_id | default('') }}"
    incident_number: "{{ incident_number | default('') }}"
    short_description: "{{ short_description | default('') }}"
    description: "{{ description | default('') }}"
    llm_temperature: 0.4
    llm_max_tokens: 2000

  tasks:
    - name: Display demo information
      ansible.builtin.debug:
        msg:
          - "================================"
          - "AIOps Incident Enrichment Demo"
          - "================================"
          - "Incident: {{ incident_number }}"
          - "Sys ID: {{ incident_sys_id }}"
          - "Original Short Description: {{ short_description }}"
          - "LLM Model: {{ lookup('env', 'LLM_MODEL') }}"
          - "================================"

    - name: Validate required variables
      ansible.builtin.assert:
        that:
          - incident_sys_id | length > 0
          - incident_number | length > 0
          - short_description | length > 0
        fail_msg: "Missing required variables: incident_sys_id, incident_number, or short_description"

    # ========================================================================
    # STEP 1: Enhance Short Description (Quick call - 5-10 seconds)
    # ========================================================================
    - name: Prepare short description enhancement prompt
      ansible.builtin.set_fact:
        short_desc_prompt: |-
          Transform this cryptic monitoring alert into a clear, concise incident title (max 100 characters):

          Original: {{ short_description }}
          Context: {{ description[:200] if description else 'No additional context' }}

          Create a clear technical summary that includes:
          - Service/system name
          - Issue type
          - Severity indicator

          Format: Just return the enhanced short description, nothing else.

    - name: Call LLM API for short description
      ansible.builtin.uri:
        url: "{{ lookup('env', 'LLM_ENDPOINT_URL') }}"
        method: POST
        headers:
          Authorization: "Bearer {{ lookup('env', 'LLM_API_KEY') }}"
          Content-Type: "application/json"
        body_format: json
        body:
          model: "{{ lookup('env', 'LLM_MODEL') }}"
          messages:
            - role: system
              content: "You are an IT operations expert. Create concise, clear incident titles."
            - role: user
              content: "{{ short_desc_prompt }}"
          temperature: 0.3
          max_tokens: 100
        status_code: 200
        timeout: 60
        validate_certs: false
      register: short_desc_response

    - name: Extract enhanced short description
      ansible.builtin.set_fact:
        enhanced_short_desc: "{{ short_desc_response.json.choices[0].message.content | trim }}"

    - name: Update ServiceNow - Short Description
      ansible.builtin.uri:
        url: "{{ lookup('env', 'SNOW_INSTANCE') }}/api/now/table/incident/{{ incident_sys_id }}"
        method: PATCH
        user: "{{ lookup('env', 'SNOW_USERNAME') }}"
        password: "{{ lookup('env', 'SNOW_PASSWORD') }}"
        force_basic_auth: yes
        headers:
          Accept: application/json
          Content-Type: application/json
        body_format: json
        body:
          short_description: "{{ enhanced_short_desc }}"
          work_notes: "AI enrichment started - short description enhanced"
        status_code: 200
        timeout: 30
        validate_certs: false
      register: snow_update_1

    - name: Short description updated
      ansible.builtin.debug:
        msg: "✓ Step 1/3: Short description enhanced and updated"

    # ========================================================================
    # STEP 2: Enhance Full Description (Medium call - 20-30 seconds)
    # ========================================================================
    - name: Prepare description enhancement prompt
      ansible.builtin.set_fact:
        description_prompt: |-
          Analyze this incident and provide a detailed technical description:

          Alert: {{ short_description }}
          Details: {{ description if description else 'No additional details provided' }}

          Provide a comprehensive analysis with:

          1. Issue Summary (what's happening, which systems affected)
          2. Technical Context (components involved, common causes)
          3. Impact Assessment (user/business impact, affected services)
          4. Initial Troubleshooting (diagnostic commands, logs to check)

          Use clear technical language accessible to both technical and non-technical stakeholders.

    - name: Call LLM API for description
      ansible.builtin.uri:
        url: "{{ lookup('env', 'LLM_ENDPOINT_URL') }}"
        method: POST
        headers:
          Authorization: "Bearer {{ lookup('env', 'LLM_API_KEY') }}"
          Content-Type: "application/json"
        body_format: json
        body:
          model: "{{ lookup('env', 'LLM_MODEL') }}"
          messages:
            - role: system
              content: "You are an IT operations analyst providing detailed technical incident analysis."
            - role: user
              content: "{{ description_prompt }}"
          temperature: 0.4
          max_tokens: 800
        status_code: 200
        timeout: 60
        validate_certs: false
      register: description_response

    - name: Extract enhanced description
      ansible.builtin.set_fact:
        enhanced_desc: "{{ description_response.json.choices[0].message.content | trim }}"

    - name: Update ServiceNow - Description
      ansible.builtin.uri:
        url: "{{ lookup('env', 'SNOW_INSTANCE') }}/api/now/table/incident/{{ incident_sys_id }}"
        method: PATCH
        user: "{{ lookup('env', 'SNOW_USERNAME') }}"
        password: "{{ lookup('env', 'SNOW_PASSWORD') }}"
        force_basic_auth: yes
        headers:
          Accept: application/json
          Content-Type: application/json
        body_format: json
        body:
          description: "{{ enhanced_desc }}"
        status_code: 200
        timeout: 30
        validate_certs: false
      register: snow_update_2

    - name: Description updated
      ansible.builtin.debug:
        msg: "✓ Step 2/3: Full description enhanced and updated"

    # ========================================================================
    # STEP 3: Generate RCA and Work Notes (Medium call - 20-30 seconds)
    # ========================================================================
    - name: Prepare RCA and recommendations prompt
      ansible.builtin.set_fact:
        rca_prompt: |-
          Based on this incident, provide root cause analysis and next steps:

          Incident: {{ enhanced_short_desc }}
          Analysis: {{ enhanced_desc[:500] }}

          Provide:

          1. Root Cause Possibilities (most likely causes, ranked)
          2. Recommended Next Steps (immediate actions for responders)
          3. Escalation Guidance (when to escalate, to which team)
          4. Prevention Recommendations (how to avoid recurrence)

          Be concise and actionable.

    - name: Call LLM API for RCA
      ansible.builtin.uri:
        url: "{{ lookup('env', 'LLM_ENDPOINT_URL') }}"
        method: POST
        headers:
          Authorization: "Bearer {{ lookup('env', 'LLM_API_KEY') }}"
          Content-Type: "application/json"
        body_format: json
        body:
          model: "{{ lookup('env', 'LLM_MODEL') }}"
          messages:
            - role: system
              content: "You are an IT operations expert providing root cause analysis and recommendations."
            - role: user
              content: "{{ rca_prompt }}"
          temperature: 0.4
          max_tokens: 600
        status_code: 200
        timeout: 60
        validate_certs: false
      register: rca_response

    - name: Extract RCA and recommendations
      ansible.builtin.set_fact:
        rca_analysis: "{{ rca_response.json.choices[0].message.content | trim }}"

    - name: Build final work notes
      ansible.builtin.set_fact:
        work_notes_final: |-
          ========================================
          AI INCIDENT ENRICHMENT COMPLETE
          ========================================
          Timestamp: {{ ansible_date_time.iso8601 }}
          Model: {{ lookup('env', 'LLM_MODEL') }}

          ORIGINAL CONTENT:
          -----------------
          Short Description: {{ short_description }}
          Description: {{ description if description else 'Not provided' }}

          AI-ENHANCED CONTENT APPLIED:
          ----------------------------
          ✓ Short description enhanced
          ✓ Full description enriched with technical analysis
          ✓ Root cause analysis and recommendations added

          {{ rca_analysis }}

          ========================================
          Token Usage Summary:
          - Short Desc: {{ short_desc_response.json.usage.total_tokens }} tokens
          - Description: {{ description_response.json.usage.total_tokens }} tokens
          - RCA Analysis: {{ rca_response.json.usage.total_tokens }} tokens
          - Total: {{ short_desc_response.json.usage.total_tokens + description_response.json.usage.total_tokens + rca_response.json.usage.total_tokens }} tokens
          ========================================

    - name: Update ServiceNow - Final Work Notes and Flag
      ansible.builtin.uri:
        url: "{{ lookup('env', 'SNOW_INSTANCE') }}/api/now/table/incident/{{ incident_sys_id }}"
        method: PATCH
        user: "{{ lookup('env', 'SNOW_USERNAME') }}"
        password: "{{ lookup('env', 'SNOW_PASSWORD') }}"
        force_basic_auth: yes
        headers:
          Accept: application/json
          Content-Type: application/json
        body_format: json
        body:
          work_notes: "{{ work_notes_final }}"
          u_ai_enriched: true
        status_code: 200
        timeout: 30
        validate_certs: false
      register: snow_update

    - name: Display ServiceNow update result
      ansible.builtin.debug:
        msg:
          - "================================"
          - "SERVICENOW UPDATE SUCCESSFUL"
          - "================================"
          - "Incident: {{ incident_number }}"
          - "Sys ID: {{ incident_sys_id }}"
          - "Updated: {{ snow_update.json.result.sys_updated_on }}"
          - "AI Enriched Flag: {{ snow_update.json.result.u_ai_enriched }}"
          - "================================"
          - ""
          - "View in ServiceNow:"
          - "{{ lookup('env', 'SNOW_INSTANCE') }}/nav_to.do?uri=incident.do?sys_id={{ incident_sys_id }}"
