---
- name: Update ServiceNow Incident with Container Log Analysis
  hosts: localhost
  gather_facts: true

  vars:
    dependency_tag: "{{ dependency_tag | default('payment-app-cluster-prod') }}"
    log_content: "{{ log_content | default('') }}"
    ai_log_summary: "{{ ai_log_summary | default('') }}"
    target_host: "{{ target_host | default('node1') }}"
    log_file_path: "{{ log_file_path | default('/var/log/containers/payment-app-pod123-container.log') }}"
    log_local_file: "{{ log_local_file | default('') }}"
    wait_for_incident_seconds: 60

  tasks:
    - name: Display log attachment workflow information
      ansible.builtin.debug:
        msg:
          - "=============================================="
          - "ServiceNow Log Attachment Workflow"
          - "=============================================="
          - "Dependency Tag: {{ dependency_tag }}"
          - "Target Host: {{ target_host }}"
          - "Log File: {{ log_file_path }}"
          - "Wait Time: {{ wait_for_incident_seconds }}s"
          - "=============================================="

    - name: Wait for incident creation workflow to complete
      ansible.builtin.pause:
        seconds: "{{ wait_for_incident_seconds }}"
      when: wait_for_incident_seconds | int > 0

    - name: Query ServiceNow for incident by dependency_tag
      ansible.builtin.uri:
        url: "{{ lookup('env', 'SNOW_INSTANCE') }}/api/now/table/incident"
        method: GET
        user: "{{ lookup('env', 'SNOW_USERNAME') }}"
        password: "{{ lookup('env', 'SNOW_PASSWORD') }}"
        force_basic_auth: yes
        headers:
          Accept: application/json
        status_code: 200
        timeout: 30
        validate_certs: false
      register: incident_query
      vars:
        query_params:
          sysparm_query: "u_dependency_tag={{ dependency_tag }}^sys_created_onRELATIVEGT@minute@ago@2"
          sysparm_limit: 1
          sysparm_fields: "sys_id,number,short_description,state"
      args:
        url: "{{ lookup('env', 'SNOW_INSTANCE') }}/api/now/table/incident?sysparm_query=u_dependency_tag={{ dependency_tag }}^sys_created_onRELATIVEGT@minute@ago@2&sysparm_limit=1&sysparm_fields=sys_id,number,short_description,state"

    - name: Verify incident was found
      ansible.builtin.assert:
        that:
          - incident_query.json.result | length > 0
        fail_msg: "No incident found with dependency_tag '{{ dependency_tag }}' created in last 2 minutes"
        success_msg: "Found incident: {{ incident_query.json.result[0].number }}"

    - name: Extract incident details
      ansible.builtin.set_fact:
        incident_sys_id: "{{ incident_query.json.result[0].sys_id }}"
        incident_number: "{{ incident_query.json.result[0].number }}"
        incident_short_desc: "{{ incident_query.json.result[0].short_description }}"

    - name: Display found incident
      ansible.builtin.debug:
        msg:
          - "Found Incident:"
          - "  Number: {{ incident_number }}"
          - "  Sys ID: {{ incident_sys_id }}"
          - "  Description: {{ incident_short_desc }}"

    # ========================================================================
    # STEP 1: Attach Raw Log File to Incident
    # ========================================================================
    - name: Read log file content (if not already provided)
      ansible.builtin.set_fact:
        log_content_base64: "{{ log_content | b64encode }}"
      when: log_content | length > 0

    - name: Create log file attachment name
      ansible.builtin.set_fact:
        log_attachment_name: "openshift_container_logs_{{ target_host }}_{{ ansible_date_time.epoch }}.log"

    - name: Attach raw log file to ServiceNow incident
      ansible.builtin.uri:
        url: "{{ lookup('env', 'SNOW_INSTANCE') }}/api/now/attachment/file"
        method: POST
        user: "{{ lookup('env', 'SNOW_USERNAME') }}"
        password: "{{ lookup('env', 'SNOW_PASSWORD') }}"
        force_basic_auth: yes
        headers:
          Accept: application/json
          Content-Type: text/plain
        body: "{{ log_content }}"
        status_code: 201
        timeout: 60
        validate_certs: false
      register: attachment_response
      vars:
        attachment_url: "{{ lookup('env', 'SNOW_INSTANCE') }}/api/now/attachment/file?table_name=incident&table_sys_id={{ incident_sys_id }}&file_name={{ log_attachment_name }}"
      args:
        url: "{{ lookup('env', 'SNOW_INSTANCE') }}/api/now/attachment/file?table_name=incident&table_sys_id={{ incident_sys_id }}&file_name={{ log_attachment_name }}"

    - name: Log attachment successful
      ansible.builtin.debug:
        msg:
          - "✓ Raw log file attached"
          - "  Attachment Sys ID: {{ attachment_response.json.result.sys_id }}"
          - "  File Name: {{ log_attachment_name }}"
          - "  File Size: {{ attachment_response.json.result.size_bytes }} bytes"

    # ========================================================================
    # STEP 2: Add Work Notes with AI Log Analysis
    # ========================================================================
    - name: Build work notes with AI analysis
      ansible.builtin.set_fact:
        log_work_notes: |-
          ========================================
          CONTAINER LOG ANALYSIS - AI CORRELATION
          ========================================
          Timestamp: {{ ansible_date_time.iso8601 }}
          Source Host: {{ target_host }}
          Log File: {{ log_file_path }}
          Attached File: {{ log_attachment_name }}

          ANALYSIS SUMMARY:
          -----------------
          {{ ai_log_summary }}

          ========================================
          LOG COLLECTION DETAILS:
          - Container: payment-app-pod123
          - Namespace: payment-prod
          - Host: {{ target_host }}
          - Log Lines Analyzed: {{ (log_content.split('\n') | length) if log_content else 'N/A' }}

          CORRELATION WITH ALERTS:
          This log analysis correlates with the OpenShift alerts that triggered
          this incident. The container logs provide root-level diagnostic data
          showing the actual failure points within the payment application pod.

          See attached log file for complete details.
          ========================================

    - name: Update ServiceNow incident with AI log analysis
      ansible.builtin.uri:
        url: "{{ lookup('env', 'SNOW_INSTANCE') }}/api/now/table/incident/{{ incident_sys_id }}"
        method: PATCH
        user: "{{ lookup('env', 'SNOW_USERNAME') }}"
        password: "{{ lookup('env', 'SNOW_PASSWORD') }}"
        force_basic_auth: yes
        headers:
          Accept: application/json
          Content-Type: application/json
        body_format: json
        body:
          work_notes: "{{ log_work_notes }}"
          u_log_analysis_complete: true
        status_code: 200
        timeout: 30
        validate_certs: false
      register: snow_log_update

    - name: Work notes updated
      ansible.builtin.debug:
        msg: "✓ Work notes added with AI log analysis"

    # ========================================================================
    # STEP 3: Update Incident Description with Log Context
    # ========================================================================
    - name: Get current incident description
      ansible.builtin.uri:
        url: "{{ lookup('env', 'SNOW_INSTANCE') }}/api/now/table/incident/{{ incident_sys_id }}"
        method: GET
        user: "{{ lookup('env', 'SNOW_USERNAME') }}"
        password: "{{ lookup('env', 'SNOW_PASSWORD') }}"
        force_basic_auth: yes
        headers:
          Accept: application/json
        status_code: 200
        timeout: 30
        validate_certs: false
      register: current_incident

    - name: Append log context to description
      ansible.builtin.set_fact:
        updated_description: |-
          {{ current_incident.json.result.description }}

          ---
          CONTAINER LOG ANALYSIS ADDED:
          Container logs from {{ target_host }} have been attached and analyzed.
          See work notes for AI-generated analysis and correlation with alerts.

    - name: Update incident description
      ansible.builtin.uri:
        url: "{{ lookup('env', 'SNOW_INSTANCE') }}/api/now/table/incident/{{ incident_sys_id }}"
        method: PATCH
        user: "{{ lookup('env', 'SNOW_USERNAME') }}"
        password: "{{ lookup('env', 'SNOW_PASSWORD') }}"
        force_basic_auth: yes
        headers:
          Accept: application/json
          Content-Type: application/json
        body_format: json
        body:
          description: "{{ updated_description }}"
        status_code: 200
        timeout: 30
        validate_certs: false
      register: description_update

    - name: Display final summary
      ansible.builtin.debug:
        msg:
          - "=============================================="
          - "SERVICENOW INCIDENT UPDATE COMPLETE"
          - "=============================================="
          - "Incident: {{ incident_number }}"
          - "Sys ID: {{ incident_sys_id }}"
          - "Updates Applied:"
          - "  ✓ Raw log file attached ({{ log_attachment_name }})"
          - "  ✓ AI log analysis added to work notes"
          - "  ✓ Incident description updated"
          - "  ✓ Log analysis flag set: true"
          - ""
          - "View in ServiceNow:"
          - "{{ lookup('env', 'SNOW_INSTANCE') }}/nav_to.do?uri=incident.do?sys_id={{ incident_sys_id }}"
          - "=============================================="

    - name: Export incident details for next workflow steps
      ansible.builtin.set_stats:
        data:
          incident_sys_id: "{{ incident_sys_id }}"
          incident_number: "{{ incident_number }}"
          log_attachment_sys_id: "{{ attachment_response.json.result.sys_id }}"
          log_analysis_complete: true
        per_host: false
